//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

#define B0     BT_SEL 0
#define B1     BT_SEL 1
#define B2     BT_SEL 2
#define B3     BT_SEL 3
#define B4     BT_SEL 4
#define B5     BT_SEL 5
#define OTGL   out OUT_TOG
#define BT_C   BT_CLR
#define BT_C_A BT_CLR_ALL


&mt {
    quick-tap-ms = <0>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tvp {
            timeout-ms = <100>;
            key-positions = <11 12 13>;
            bindings = <&tog 0>;
        };

        combo_q {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp Q>;
        };

        combo_p {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp P>;
        };

        reset_layers {
            bindings = <&to 0>;
            key-positions = <34 35>;
            require-prior-idle-ms = <100>;
        };

        to_gaming {
            bindings = <&to 3>;
            key-positions = <20 21>;
        };

        quote {
            bindings = <&kp SQT>;
            key-positions = <28 29>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <25 26>;
        };

        system_layer {
            bindings = <&mo 8>;
            key-positions = <20 31 30>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <33 37>;
        };
    };

    macros {
        delete: delete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp BACKSPACE>,
                <&macro_press>;

            label = "DELETE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃   ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     S     ┃     D     ┃     F     ┃     G     ┃   ┃     H     ┃     J     ┃     K     ┃     L     ┃     ;     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
             &kp Q       &kp W       &kp E        &kp R             &kp T        &kp Y      &kp U        &kp I            &kp O       &kp P
             &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F       &kp G        &kp H      &hm RSHFT J  &hm RCTRL K      &hm RALT L  &hm RGUI SEMI
&lt 7 GRAVE  &kp Z       &kp X       &kp C        &kp V             &kp B        &kp N      &kp M        &kp COMMA        &kp DOT     &kp FSLH       &kp BSLH
                                     &lt 5 TAB    &lt 6 LEFT_SHIFT  &kp SPACE    &kp SPACE  &lt 1 RET    &lt 2 BACKSPACE
            >;
        };

        nav {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp HOME   &kp LEFT   &kp UP    &kp RIGHT  &kp END
        &trans  &trans  &trans  &trans  &trans    &kp PG_UP  &kp PG_UP  &kp DOWN  &kp PG_DN  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PG_DN  &trans     &trans    &trans     &trans   &trans
                        &trans  &trans  &trans    &trans     &trans     &trans
            >;
        };

        mouse {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &msc SCRL_RIGHT
        &trans  &trans  &trans  &trans  &trans    &msc SCRL_UP    &mkp MB1        &mmv MOVE_DOWN  &mkp MB2         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN  &mkp MB4        &mkp MB3        &mkp MB5         &trans           &trans
                        &trans  &trans  &trans    &trans          &trans          &trans
            >;
        };

        gaming {
            bindings = <
         &kp TAB   &kp A  &kp W      &kp D      &kp E     &trans  &trans  &trans  &trans  &trans
         &kp LALT  &kp Q  &kp S      &kp R      &kp F     &trans  &trans  &trans  &trans  &trans
&kp ESC  &trans    &kp Z  &kp X      &kp C      &kp G     &trans  &trans  &trans  &trans  &trans  &trans
                          &kp LCTRL  &kp LSHFT  &trans    &trans  &trans  &trans
            >;
        };

        gaming_num {
            bindings = <
        &trans  &kp A   &kp W   &kp D   &kp N1    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &kp S   &kp M   &kp N2    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp B   &kp N   &kp N3    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        symbol {
            bindings = <
        &trans  &trans  &trans  &kp LS(LBRC)          &kp LS(RBRC)             &kp N7        &kp N8  &kp N9  &kp EQUAL  &kp MINUS
        &trans  &trans  &trans  &kp LBKT              &kp RBKT                 &kp N4        &kp N5  &kp N6  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp NUMBER_1  &kp N2  &kp N3  &kp ENTER  &trans     &trans
                        &trans  &trans                &trans                   &trans        &trans  &kp N0
            >;
        };

        symbol_shift {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(UNDER)  &trans
        &trans  &trans  &trans  &trans  &trans    &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &trans         &trans  &trans
                        &trans  &trans  &trans    &trans        &trans         &kp LS(RPAR)
            >;
        };

        function {
            bindings = <
        &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans  &trans  &trans  &trans
        &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &trans  &trans  &trans  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &trans   &trans   &trans    &trans  &trans  &trans
            >;
        };

        adjust_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "system";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &sys_reset   &bt BT_CLR  &out OUT_TOG  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F12
        &bootloader  &bt BT_NXT  &trans        &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans       &bt BT_PRV  &trans        &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                 &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        gaming_active {
            if-layers = <3>;
            then-layer = <4>;
        };
    };
};
